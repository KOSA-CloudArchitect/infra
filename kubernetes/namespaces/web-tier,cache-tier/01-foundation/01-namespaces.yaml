# EKS Migration - Namespaces and Basic Resources
# Task 1.2: 네임스페이스 및 기본 리소스 생성

---
# Web Tier Namespace - Frontend, Backend API and WebSocket services
apiVersion: v1
kind: Namespace
metadata:
  name: web-tier
  labels:
    name: web-tier
    app.kubernetes.io/part-of: review-analysis-system
    environment: production
    tier: web
  annotations:
    description: "Web tier namespace for Frontend, Backend API and WebSocket services"

---
# Cache Tier Namespace - Redis cache cluster
apiVersion: v1
kind: Namespace
metadata:
  name: cache-tier
  labels:
    name: cache-tier
    app.kubernetes.io/part-of: review-analysis-system
    environment: production
    tier: cache
  annotations:
    description: "Cache tier namespace for Redis cluster"

---
# Monitoring Namespace - Prometheus, Grafana, AlertManager
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
    app.kubernetes.io/part-of: review-analysis-system
    environment: production
    tier: monitoring
  annotations:
    description: "Monitoring namespace for Prometheus, Grafana, and AlertManager"

---
# Resource Quota for web-tier namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: web-tier-quota
  namespace: web-tier
spec:
  hard:
    requests.cpu: "6"
    requests.memory: 12Gi
    limits.cpu: "12"
    limits.memory: 24Gi
    pods: "30"
    services: "15"
    persistentvolumeclaims: "5"

---
# Resource Quota for cache-tier namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: cache-tier-quota
  namespace: cache-tier
spec:
  hard:
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4"
    limits.memory: 8Gi
    pods: "10"
    services: "5"
    persistentvolumeclaims: "10"

---
# Resource Quota for kafka namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: kafka-quota
  namespace: kafka
spec:
  hard:
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4"
    limits.memory: 8Gi
    pods: "10"
    services: "5"
    persistentvolumeclaims: "10"

---
# Resource Quota for monitoring namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: monitoring-quota
  namespace: monitoring
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    pods: "20"
    services: "10"
    persistentvolumeclaims: "15"