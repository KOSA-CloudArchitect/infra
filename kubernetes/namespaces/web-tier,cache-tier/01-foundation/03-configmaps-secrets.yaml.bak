# EKS Migration - ConfigMaps and Secrets
# Task 3.1: ConfigMap 및 Secret 리소스 작성

---
# Application Configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: web-tier
  labels:
    app.kubernetes.io/name: app-config
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: configuration
data:
  # 로깅 설정
  LOG_LEVEL: "info"
  LOG_FILE: "/app/logs/app.log"
  
  # HTTP 클라이언트 설정
  HTTP_TIMEOUT: "30000"
  HTTP_RETRY_COUNT: "3"
  
  # Circuit Breaker 설정
  CIRCUIT_BREAKER_TIMEOUT: "30000"
  CIRCUIT_BREAKER_ERROR_THRESHOLD: "50"
  CIRCUIT_BREAKER_RESET_TIMEOUT: "60000"
  
  # 애플리케이션 설정
  NODE_ENV: "production"
  MAX_CONNECTIONS: "100"
  REQUEST_TIMEOUT: "30s"
  
  # Kafka 설정 (비민감 정보)
  KAFKA_CLIENT_ID: "kosa-backend"
  KAFKA_GROUP_ID: "kosa-backend-group"
  KAFKA_SSL_ENABLED: "false"
  KAFKA_SASL_ENABLED: "false"
  
  # Redis 설정 (비민감 정보)
  REDIS_DB: "0"
  REDIS_POOL_MAX: "20"
  REDIS_IDLE_TIMEOUT: "30000"
  
  # 데이터베이스 설정 (비민감 정보)
  DB_POOL_MAX: "20"
  DB_IDLE_TIMEOUT: "30000"
  DB_CONNECTION_TIMEOUT: "2000"

---
# Next.js Frontend Configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: web-tier
  labels:
    app.kubernetes.io/name: frontend-config
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: frontend
data:
  # Next.js 환경 변수
  NEXT_PUBLIC_ENV: "production"
  NEXT_TELEMETRY_DISABLED: "1"
  
  # API 엔드포인트 (외부 ALB URL)
  NEXT_PUBLIC_API_BASE_URL: "http://review-analysis-web-alb-2002000396.ap-northeast-2.elb.amazonaws.com/api"
  NEXT_PUBLIC_WS_URL: "ws://review-analysis-web-alb-2002000396.ap-northeast-2.elb.amazonaws.com/ws"
  
  # 성능 설정
  NEXT_PUBLIC_CACHE_TTL: "3600"
  NEXT_PUBLIC_MAX_RETRIES: "3"

---
# Database Connection Secret
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: web-tier
  labels:
    app.kubernetes.io/name: database-secret
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: database
type: Opaque
stringData:
  # PostgreSQL 연결 정보 (테스트용 - 실제 값으로 교체 필요)
  DB_HOST: "localhost"
  DB_PORT: "5432"
  DB_USER: "postgres"
  DB_PASSWORD: "test-password"
  DB_NAME: "highpipe"
  
  # Prisma Database URL
  DATABASE_URL: "postgresql://postgres:test-password@localhost:5432/highpipe?schema=public"

---
# Redis Connection Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: web-tier
  labels:
    app.kubernetes.io/name: redis-secret
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: cache
type: Opaque
stringData:
  # Redis 연결 정보
  REDIS_HOST: "redis-service.cache-tier.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "redis-secure-password-2024"
  REDIS_URL: "redis://:redis-secure-password-2024@redis-service.cache-tier.svc.cluster.local:6379/0"

---
# MongoDB Connection Secret
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: web-tier
  labels:
    app.kubernetes.io/name: mongodb-secret
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: database
type: Opaque
stringData:
  # MongoDB 연결 정보
  MONGODB_URL: "mongodb://172.21.66.55:27017/highpipe"
  MONGODB_DB_NAME: "highpipe"

---
# Application Secrets (JWT, API Keys, etc.)
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: web-tier
  labels:
    app.kubernetes.io/name: app-secrets
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: application
type: Opaque
stringData:
  # JWT 설정
  JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
  JWT_EXPIRES_IN: "15m"
  JWT_REFRESH_SECRET: "your-super-secret-refresh-key-change-this-in-production"
  JWT_REFRESH_EXPIRES_IN: "7d"
  
  # 외부 서비스 API 키
  ANALYSIS_SERVER_TOKEN: "your-analysis-server-bearer-token"
  CRAWLING_SERVER_TOKEN: "your-crawling-api-token"
  
  # Sentry DSN
  SENTRY_DSN: "https://your-sentry-dsn@sentry.io/project-id"

---
# External Services Configuration Secret
apiVersion: v1
kind: Secret
metadata:
  name: external-services-secret
  namespace: web-tier
  labels:
    app.kubernetes.io/name: external-services-secret
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: external
type: Opaque
stringData:
  # 분석 서버 설정 (테스트용)
  ANALYSIS_SERVER_URL: "http://localhost:5000"
  
  # 크롤링 서버 설정 (테스트용)
  CRAWLING_SERVER_URL: "http://localhost:8001"
  
  # Kafka 브로커 설정 (테스트용)
  KAFKA_BROKERS: "localhost:9092"
  KAFKA_SASL_USERNAME: "test-user"
  KAFKA_SASL_PASSWORD: "test-password"
  
  # Airflow API 설정 (테스트용)
  AIRFLOW_API_URL: "http://localhost:8080/api/v1"
  AIRFLOW_USERNAME: "admin"
  AIRFLOW_PASSWORD: "test-password"

---
# Cache Tier ConfigMap (Redis 네임스페이스용)
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: cache-tier
  labels:
    app.kubernetes.io/name: redis-config
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: cache
data:
  # Redis 설정
  redis.conf: |
    # Redis 기본 설정
    bind 0.0.0.0
    port 6379
    protected-mode yes
    
    # 메모리 설정
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # 지속성 설정
    save 900 1
    save 300 10
    save 60 10000
    
    # 로깅 설정
    loglevel notice
    logfile ""
    
    # 네트워크 설정
    tcp-keepalive 300
    timeout 0
    
    # 보안 설정
    requirepass your-secure-redis-password

---
# Cache Tier Secret (Redis 네임스페이스용)
apiVersion: v1
kind: Secret
metadata:
  name: redis-auth-secret
  namespace: cache-tier
  labels:
    app.kubernetes.io/name: redis-auth-secret
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: cache
type: Opaque
stringData:
  # Redis 인증 정보
  redis-password: "your-secure-redis-password"
  redis-auth: "your-secure-redis-password"