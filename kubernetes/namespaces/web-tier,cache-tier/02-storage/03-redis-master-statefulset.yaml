# Redis Master StatefulSet
# Task 4.1: Redis StatefulSet 배포 - Master 노드 구성

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  namespace: cache-tier
  labels:
    app: redis
    component: master
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
    app.kubernetes.io/part-of: review-analysis-system
spec:
  serviceName: redis-master
  replicas: 1
  selector:
    matchLabels:
      app: redis
      component: master
  template:
    metadata:
      labels:
        app: redis
        component: master
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: master
        app.kubernetes.io/part-of: review-analysis-system
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6379"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: redis-master
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - /scripts/init-master.sh
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        - name: REDIS_ROLE
          value: "master"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # 헬스체크 설정 (기존 redisService.js의 healthCheck와 호환)
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - /scripts/health-check.sh
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /scripts/health-check.sh
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        # 볼륨 마운트
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /config
          readOnly: true
        - name: redis-scripts
          mountPath: /scripts
        - name: backup-storage
          mountPath: /backup
      volumes:
      - name: redis-data
        emptyDir:
          sizeLimit: 10Gi
      - name: redis-config
        configMap:
          name: redis-config
          defaultMode: 0644
      - name: redis-scripts
        configMap:
          name: redis-scripts
          defaultMode: 0755
      - name: backup-storage
        emptyDir: {}
      # 재시작 정책
      restartPolicy: Always
      # 노드 선택 (선택사항 - 성능이 좋은 노드에 배치)
      nodeSelector:
        kubernetes.io/arch: arm64
      # Pod 간 분산 배치 (고가용성)
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
  # 임시로 emptyDir 사용 (개발/테스트용)
  # volumeClaimTemplates:
  # - metadata:
  #     name: redis-data
  #     labels:
  #       app: redis
  #       component: master
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     storageClassName: gp2
  #     resources:
  #       requests:
  #         storage: 10Gi
  # 업데이트 전략
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0