# EKS Migration - Network Policies
# Task 1.2: 네트워크 보안 정책 설정

---
# Network Policy for backend namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: backend
  labels:
    app.kubernetes.io/part-of: review-analysis-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ALB/Ingress Controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 3000  # Frontend
    - protocol: TCP
      port: 3001  # Backend
    - protocol: TCP
      port: 3002  # WebSocket
  # Allow inter-pod communication within backend
  - from:
    - namespaceSelector:
        matchLabels:
          name: backend
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
  egress:
  # Allow egress to redis (Redis)
  - to:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to kafka
  - to:
    - namespaceSelector:
        matchLabels:
          name: kafka
    ports:
    - protocol: TCP
      port: 9092
  # Allow egress to external services (PostgreSQL, Crawling Server)
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 8000  # Crawling Server
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for external API calls
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# Network Policy for redis namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: redis
  labels:
    app.kubernetes.io/part-of: review-analysis-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from backend
  - from:
    - namespaceSelector:
        matchLabels:
          name: backend
    ports:
    - protocol: TCP
      port: 6379
  # Allow inter-pod communication within redis (Redis cluster)
  - from:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 16379  # Redis cluster bus
  egress:
  # Allow inter-pod communication for Redis cluster
  - to:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 16379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Network Policy for kafka namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kafka-network-policy
  namespace: kafka
  labels:
    app.kubernetes.io/part-of: review-analysis-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from backend
  - from:
    - namespaceSelector:
        matchLabels:
          name: backend
    ports:
    - protocol: TCP
      port: 9092  # Kafka
    - protocol: TCP
      port: 2181  # Zookeeper
  # Allow inter-pod communication within kafka cluster
  - from:
    - namespaceSelector:
        matchLabels:
          name: kafka
    ports:
    - protocol: TCP
      port: 9092
    - protocol: TCP
      port: 2181
    - protocol: TCP
      port: 9093  # Kafka inter-broker
  egress:
  # Allow inter-pod communication for Kafka cluster
  - to:
    - namespaceSelector:
        matchLabels:
          name: kafka
    ports:
    - protocol: TCP
      port: 9092
    - protocol: TCP
      port: 2181
    - protocol: TCP
      port: 9093
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Default deny-all policy for kube-system (optional, be careful)
# This policy should be applied carefully as it might break system components
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: kube-system-default-deny
#   namespace: kube-system
# spec:
#   podSelector: {}
#   policyTypes:
#   - Ingress
#   - Egress