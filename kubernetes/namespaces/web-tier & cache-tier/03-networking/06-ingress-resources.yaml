# EKS Migration - Ingress Resources
# Task 5.1: ALB를 통한 외부 트래픽 라우팅 설정

---
# Main Application Ingress for web-tier namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-tier-ingress
  namespace: web-tier
  labels:
    app.kubernetes.io/name: web-tier-ingress
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: ingress
  annotations:
    # ALB 기본 설정
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: review-analysis-web-alb
    
    # HTTP만 사용 (HTTPS 설정 제거)
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    # alb.ingress.kubernetes.io/ssl-redirect: '443'  # HTTPS 리다이렉트 비활성화
    # Note: HTTPS 사용 시 ACM 인증서 ARN 필요
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:ACCOUNT_ID:certificate/CERTIFICATE_ID
    
    # 헬스체크 설정
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # 로드밸런서 속성 설정
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true,
      access_logs.s3.enabled=false
    
    # React SPA 라우팅 지원을 위한 설정
    alb.ingress.kubernetes.io/actions.frontend-fallback: |
      {
        "type": "forward",
        "forwardConfig": {
          "targetGroups": [
            {
              "serviceName": "frontend-service",
              "servicePort": "80",
              "weight": 100
            }
          ]
        }
      }
    
    # WebSocket 연결 지원을 위한 설정
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/target-group-attributes: |
      stickiness.enabled=true,
      stickiness.lb_cookie.duration_seconds=86400
    
    # WebSocket 지원을 위한 추가 설정
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=3600,
      routing.http.xff_client_port.enabled=true,
      routing.http2.enabled=false
    
    # 태그 설정
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=review-analysis,
      Component=web-tier,
      ManagedBy=kubernetes

spec:
  rules:
  - http:
      paths:
      # API 라우팅 (우선순위 높음)
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3001
      
      # WebSocket 라우팅
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: websocket-service
            port:
              number: 3002
      
      # 헬스체크 엔드포인트
      - path: /health
        pathType: Exact
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # React 정적 자산 (static으로 시작하는 경로)
      - path: /static
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # 기본 라우팅 - React Frontend (모든 나머지 경로)
      # React Router 히스토리 모드 지원을 위한 fallback
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80

---
# Development/Testing Ingress (HTTP only)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-tier-dev-ingress
  namespace: web-tier
  labels:
    app.kubernetes.io/name: web-tier-dev-ingress
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: ingress
    app.kubernetes.io/environment: development
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: review-analysis-dev-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/tags: |
      Environment=development,
      Project=review-analysis,
      Component=web-tier,
      ManagedBy=kubernetes

spec:
  rules:
  - http:
      paths:
      # API 라우팅
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3001
      
      # WebSocket 라우팅
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: websocket-service
            port:
              number: 3002
      
      # 헬스체크 엔드포인트
      - path: /health
        pathType: Exact
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # React 정적 자산
      - path: /static
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # 기본 라우팅 - React Frontend
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80

---
# Internal Monitoring Ingress (cache-tier 모니터링용)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-ingress
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: monitoring
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: review-analysis-monitoring-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=review-analysis,
      Component=monitoring,
      ManagedBy=kubernetes

spec:
  rules:
  - host: monitoring.internal.review-analysis.local
    http:
      paths:
      # Redis 모니터링 (redis-exporter)
      - path: /redis-metrics
        pathType: Prefix
        backend:
          service:
            name: redis-exporter-service
            port:
              number: 9121
      
      # 기본 모니터링 대시보드
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitoring-dashboard-service
            port:
              number: 3000