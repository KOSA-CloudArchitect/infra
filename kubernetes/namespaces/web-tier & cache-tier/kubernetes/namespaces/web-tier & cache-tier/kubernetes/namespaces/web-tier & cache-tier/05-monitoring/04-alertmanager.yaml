# EKS Migration - AlertManager
# Task 6.2: 알림 시스템 구성

---
# AlertManager ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
  labels:
    app: alertmanager
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: review-analysis-system
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@kosa.com'
      smtp_auth_username: ''
      smtp_auth_password: ''

    # 알림 라우팅 규칙
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default-receiver'
      routes:
      # 중요한 알림 (즉시 전송)
      - match:
          severity: critical
        receiver: 'critical-alerts'
        group_wait: 0s
        repeat_interval: 5m
      
      # 경고 알림 (그룹화하여 전송)
      - match:
          severity: warning
        receiver: 'warning-alerts'
        group_wait: 30s
        repeat_interval: 30m

    # 알림 수신자 설정
    receivers:
    - name: 'default-receiver'
      webhook_configs:
      - url: 'http://backend-service.web-tier:3001/api/alerts/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'kosa-alert-2024'

    - name: 'critical-alerts'
      webhook_configs:
      - url: 'http://backend-service.web-tier:3001/api/alerts/critical'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'kosa-alert-2024'
      # Slack 알림 (설정 시)
      # slack_configs:
      # - api_url: 'YOUR_SLACK_WEBHOOK_URL'
      #   channel: '#alerts'
      #   title: 'KOSA Critical Alert'
      #   text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

    - name: 'warning-alerts'
      webhook_configs:
      - url: 'http://backend-service.web-tier:3001/api/alerts/warning'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'kosa-alert-2024'

    # 알림 억제 규칙
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'cluster', 'service']

---
# AlertManager Secret
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secret
  namespace: monitoring
  labels:
    app: alertmanager
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: review-analysis-system
type: Opaque
stringData:
  webhook-auth-username: alertmanager
  webhook-auth-password: kosa-alert-2024

---
# AlertManager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: review-analysis-system
    app.kubernetes.io/component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.26.0
        args:
          - '--config.file=/etc/alertmanager/alertmanager.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=http://localhost:9093'
          - '--web.route-prefix=/'
          - '--cluster.listen-address=0.0.0.0:9094'
        ports:
        - containerPort: 9093
          name: web
        - containerPort: 9094
          name: cluster
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: alertmanager-config-volume
          mountPath: /etc/alertmanager
        - name: alertmanager-storage-volume
          mountPath: /alertmanager
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: alertmanager-config-volume
        configMap:
          defaultMode: 420
          name: alertmanager-config
      - name: alertmanager-storage-volume
        emptyDir: {}

---
# AlertManager Service
apiVersion: v1
kind: Service
metadata:
  name: alertmanager-service
  namespace: monitoring
  labels:
    app: alertmanager
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: review-analysis-system
spec:
  selector:
    app: alertmanager
  type: ClusterIP
  ports:
  - port: 9093
    targetPort: 9093
    name: web